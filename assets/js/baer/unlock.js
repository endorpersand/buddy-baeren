function loadUnlockedTags(){let e,n=localStorage.getItem(UNLOCKED_KEY);e=null!=n?JSON.parse(n):[];let t=localStorage.getItem(UNLOCKED_CONTENT);return unlockedContent=null!=t?JSON.parse(t):[],[new Set(e),new Set(unlockedContent)]}function saveUnlockedTags(e,n){let t=Array.from(e),o=Array.from(n);localStorage.setItem(UNLOCKED_KEY,JSON.stringify(t)),localStorage.setItem(UNLOCKED_CONTENT,JSON.stringify(o))}function unlockTag(e,n){unlocked.add(e),unlockedContentSet.add(n),saveUnlockedTags(unlocked,unlockedContentSet),updateLocks(n)}function lockTag(e){unlocked["delete"](e),saveUnlockedTags(unlocked)}function isTagUnlocked(e){return unlocked.has(e)}function updateLocks(e){let n=document.getElementById(e);if(null!=n&&n.hasAttribute(BAER_TAG)){let e=n.getAttribute(BAER_TAG);console.log("Updating locks for tag:",e,"unlocked?",unlocked.has(e)),unlocked.has(e)?n.classList.remove(HIDDEN):n.classList.add(HIDDEN)}}const UNLOCKED_KEY="unlocked",UNLOCKED_CONTENT="unlocked_content",BAER_TAG="baer-tag",HIDDEN="d-none",CONTENT_TO_UNLOCK="unlock-content";var unlocked=new Set,unlockedContentSet=new Set;console.log("enabling unlock script"),window.addEventListener("load",()=>{let e=loadUnlockedTags();unlocked=e[0],(unlockedContentSet=e[1]).forEach(e=>{updateLocks(e)})});